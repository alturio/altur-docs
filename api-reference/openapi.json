{
  "openapi": "3.0.1",
  "info": {
    "title": "Altur API",
    "description": "An API aimed to allow third-party developers to interact with the Altur platform through a RESTful interface.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.altur.io/api/v1.0"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/enduser/{id}": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the EndUser to return",
            "schema": {
              "type": "string",
              "format": "uuid4"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "EndUser response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/EndUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates the details of an EndUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the EndUser to update",
            "schema": {
              "type": "string",
              "format": "uuid4"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "EndUser object that needs to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndUserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "EndUser updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUser"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "EndUser not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an EndUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the EndUser to delete",
            "schema": {
              "type": "string",
              "format": "uuid4"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "EndUser deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "EndUser not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EndUser": {
        "required": [
          "id",
          "display_name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the EndUser",
            "type": "string",
            "format": "uuid4"
          },
          "display_name": {
            "description": "EndUser's display name",
            "type": "string"
          },
          "integration": {
            "description": "Integration used for communication with the EndUser ('api' is default for api-based conversations)",
            "type": "string"
          },
          "integration_id": {
            "description": "EndUser's identifier within the integration (not used for api-based EndUsers)",
            "type": "string"
          },
          "info": {
            "description": "EndUser's information valuable for interactions with chatbots or human agents",
            "type": "string"
          }
        }
      },
      "EndUserUpdate": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string"
          },
          "info": {
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Add `api-key YOUR_API_SECRET_KEY` as the value of the `Authorization` header."
      }
    }
  }
}